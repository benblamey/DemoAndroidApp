/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.ml4d.ohow;

public final class R {
    public static final class attr {
    }
    public static final class drawable {
        public static final int icon=0x7f020000;
        public static final int slideshow_0=0x7f020001;
        public static final int slideshow_1=0x7f020002;
        public static final int slideshow_2=0x7f020003;
        public static final int slideshow_3=0x7f020004;
    }
    public static final class id {
        public static final int capture_text_photo_button_capture=0x7f060000;
        public static final int capture_text_photo_button_toggle_photo=0x7f060003;
        public static final int capture_text_photo_edittext_body=0x7f060004;
        public static final int capture_text_photo_imageview_frame=0x7f060001;
        public static final int capture_text_photo_imageview_photo=0x7f060002;
        public static final int local_timeline_item_web_image_view=0x7f060006;
        public static final int local_timeline_text_view_body=0x7f060007;
        public static final int local_timeline_text_view_capture_location=0x7f060005;
        public static final int local_timeline_text_view_details=0x7f060008;
        public static final int menu_item_capture=0x7f06001d;
        public static final int menu_item_local_timeline=0x7f06001e;
        public static final int menu_item_sign_out=0x7f060020;
        public static final int menu_item_slideshow=0x7f06001f;
        public static final int register_checkbox_terms=0x7f06000e;
        public static final int register_edittext_email=0x7f06000b;
        public static final int register_edittext_first_name=0x7f060009;
        public static final int register_edittext_last_name=0x7f06000a;
        public static final int register_edittext_password=0x7f06000d;
        public static final int register_edittext_username=0x7f06000c;
        public static final int register_register_button=0x7f06000f;
        public static final int register_view_terms_and_conditions_button=0x7f060010;
        public static final int show_moment_activity_activity_text_view_body=0x7f060014;
        public static final int show_moment_activity_image_view_photo=0x7f060013;
        public static final int show_moment_activity_text_view_capture_location=0x7f060011;
        public static final int show_moment_activity_text_view_details=0x7f060012;
        public static final int sign_in_register_button=0x7f060018;
        public static final int sign_in_sign_in_button=0x7f060017;
        public static final int signin_edittext_password=0x7f060016;
        public static final int signin_edittext_username=0x7f060015;
        public static final int slide_show_image_view=0x7f06001b;
        public static final int slide_show_root_view=0x7f060019;
        public static final int slide_show_text_view=0x7f06001a;
        public static final int splash_text_view_version_number=0x7f06001c;
    }
    public static final class layout {
        public static final int capturetextphoto=0x7f030000;
        public static final int local_timeline_empty_item=0x7f030001;
        public static final int local_timeline_end_item=0x7f030002;
        public static final int local_timeline_moment_item=0x7f030003;
        public static final int local_timeline_waiting_item=0x7f030004;
        public static final int location_item=0x7f030005;
        public static final int register=0x7f030006;
        public static final int show_moment_activity=0x7f030007;
        public static final int signin=0x7f030008;
        public static final int slide_show=0x7f030009;
        public static final int splash=0x7f03000a;
    }
    public static final class menu {
        public static final int menu=0x7f050000;
    }
    public static final class string {
        /**  The strings here should be user friendly descriptions of the exceptions thrown by the API. 
 400 - Bad Request 
         */
        public static final int api_error_400_1=0x7f040002;
        public static final int api_error_400_2=0x7f040003;
        /**  401 - Unauthorized 
         */
        public static final int api_error_401_1=0x7f040004;
        public static final int api_error_401_2=0x7f040005;
        public static final int api_error_401_3=0x7f040006;
        public static final int api_error_401_4=0x7f040007;
        /**  404 - Not Found 
         */
        public static final int api_error_404_1=0x7f040008;
        /**  405 - Method not allowed 
         */
        public static final int api_error_405_1=0x7f040009;
        /**  406 - Not Acceptable 
         */
        public static final int api_error_406_1=0x7f04000a;
        /**   We don't use 'Our History of the World' because it 
		gets truncated when the app is shown in the matrix of available apps. 
         */
        public static final int app_name=0x7f04000b;
        public static final int capture_already_captured=0x7f040027;
        /**  Strings used by the 'capturelocation' activity (it is this activity that actually does the capture API call. 
         */
        public static final int capture_location_activity_label=0x7f04001e;
        public static final int capture_location_button_capture_text=0x7f04001f;
        public static final int capture_location_capture_waiting_dialog_body=0x7f040021;
        /**  Dialog and toast messages 
         */
        public static final int capture_location_capture_waiting_dialog_title=0x7f040020;
        public static final int capture_location_google_no_response=0x7f040026;
        public static final int capture_location_places_waiting_dialog_body=0x7f040023;
        public static final int capture_location_places_waiting_dialog_title=0x7f040022;
        public static final int capture_location_unlisted_place_label=0x7f040024;
        public static final int capture_location_waiting_dialog_success=0x7f040025;
        /**   Strings used by the 'capturetextphoto' activity. 
         */
        public static final int capture_text_photo_activity_label=0x7f040017;
        public static final int capture_text_photo_body_hint=0x7f040019;
        public static final int capture_text_photo_body_text_too_long=0x7f04001b;
        /**  Validation errors 
 The limits are such that the user won't actually care about their values. 
         */
        public static final int capture_text_photo_body_text_too_short=0x7f04001a;
        public static final int capture_text_photo_button_capture_text=0x7f040018;
        public static final int capture_text_photo_photo_button_toggle_add=0x7f04001c;
        public static final int capture_text_photo_photo_button_toggle_remove=0x7f04001d;
        public static final int comms_error=0x7f040000;
        public static final int dialog_error_rotate_when_busy=0x7f04000f;
        public static final int dialog_error_task_canceled=0x7f040010;
        public static final int dialog_unfriendly_error_prefix=0x7f04000e;
        /**  General dialog strings 
         */
        public static final int error_dialog_title=0x7f04000d;
        public static final int error_no_location_fix=0x7f040011;
        public static final int error_no_location_services=0x7f040012;
        public static final int error_ohow_garbage_response=0x7f040001;
        /**  getExternalStorageState() returns MEDIA_BAD_REMOVAL if the media was removed before it was unmounted. 
         */
        public static final int external_storage_MEDIA_BAD_REMOVAL=0x7f040028;
        /**  getExternalStorageState() returns MEDIA_CHECKING if the media is present and being disk-checked 
         */
        public static final int external_storage_MEDIA_CHECKING=0x7f040029;
        /**  getExternalStorageState() returns MEDIA_MOUNTED_READ_ONLY if the media is present and mounted at its mount point with read only access. 
         */
        public static final int external_storage_MEDIA_MOUNTED_READ_ONLY=0x7f04002a;
        /**   getExternalStorageState() returns MEDIA_NOFS if the media is present but is blank or is using an unsupported filesystem. 
         */
        public static final int external_storage_MEDIA_NOFS=0x7f04002b;
        /**   getExternalStorageState() returns MEDIA_REMOVED if the media is not present. 
         */
        public static final int external_storage_MEDIA_REMOVED=0x7f04002c;
        /**   getExternalStorageState() returns MEDIA_SHARED if the media is present not mounted, and shared via USB mass storage. 
         */
        public static final int external_storage_MEDIA_SHARED=0x7f04002d;
        /**  getExternalStorageState() returns MEDIA_UNMOUNTABLE if the media is present but cannot be mounted. 
         */
        public static final int external_storage_MEDIA_UNMOUNTABLE=0x7f04002e;
        /**  getExternalStorageState() returns MEDIA_UNMOUNTED if the media is present but not mounted. 
         */
        public static final int external_storage_MEDIA_UNMOUNTED=0x7f04002f;
        /**  If getExternalStorageState() returns an unknown string, use this error message.
         */
        public static final int external_storage_UNKNOWN_STATE=0x7f040030;
        public static final int general_waiting=0x7f040013;
        public static final int home_activity_label=0x7f040031;
        public static final int home_capture_label=0x7f040032;
        public static final int home_no_history_here=0x7f040034;
        public static final int home_recent_activity_label=0x7f040035;
        public static final int home_sign_out_label=0x7f040033;
        public static final int local_timeline_activity_label=0x7f040036;
        public static final int local_timeline_label_empty=0x7f040039;
        public static final int local_timeline_label_end=0x7f040037;
        public static final int local_timeline_label_waiting=0x7f040038;
        public static final int menu_item_capture=0x7f04003c;
        public static final int menu_item_local_timeline=0x7f04003b;
        public static final int menu_item_sign_out=0x7f04003d;
        public static final int menu_item_slide_show=0x7f04003a;
        public static final int moment_activity_label=0x7f040055;
        /**  Format strings for displaying an moment. 
 Parameter #1 is the moment body. 
         */
        public static final int moment_body_format=0x7f040015;
        /**  Parameter #1 is the author username, #2 is a date/time in local format & timezone. 
         */
        public static final int moment_detail_format=0x7f040016;
        public static final int ok_button_label=0x7f04000c;
        public static final int register_activity_label=0x7f04003e;
        public static final int register_button_label=0x7f040045;
        public static final int register_checkbox_terms_label=0x7f040044;
        public static final int register_error_dialog_title=0x7f040054;
        public static final int register_first_name_too_long=0x7f040049;
        /**  Messages regarding invalid registration fields 
         */
        public static final int register_first_name_too_short=0x7f040048;
        public static final int register_hint_email=0x7f040041;
        /**  Hint text for the various fields 
         */
        public static final int register_hint_first_name=0x7f04003f;
        public static final int register_hint_last_name=0x7f040040;
        public static final int register_hint_password=0x7f040043;
        public static final int register_hint_username=0x7f040042;
        public static final int register_invalid_email_address=0x7f04004c;
        public static final int register_invalid_password=0x7f04004e;
        public static final int register_invalid_username=0x7f04004d;
        public static final int register_last_name_too_long=0x7f04004b;
        public static final int register_last_name_too_short=0x7f04004a;
        public static final int register_must_accept_terms=0x7f04004f;
        public static final int register_success_dialog_body=0x7f040053;
        public static final int register_success_dialog_title=0x7f040052;
        public static final int register_view_terms_and_conditions_button_label=0x7f040046;
        public static final int register_view_terms_and_conditions_button_label_land=0x7f040047;
        public static final int register_waiting_dialog_body=0x7f040051;
        /**  Dialog messages 
         */
        public static final int register_waiting_dialog_title=0x7f040050;
        public static final int sign_in_activity_label=0x7f040056;
        public static final int sign_in_hint_password=0x7f04005b;
        /**  The hints for the text fields 
         */
        public static final int sign_in_hint_username=0x7f04005a;
        public static final int sign_in_invalid_password=0x7f04005d;
        /**  Messages regarding invalid registration fields 
         */
        public static final int sign_in_invalid_username=0x7f04005c;
        public static final int sign_in_redirected_because_credentials_invalid=0x7f040060;
        /**  The label for the buttons 
         */
        public static final int sign_in_register_label=0x7f040058;
        public static final int sign_in_sign_in_label=0x7f040059;
        public static final int sign_in_waiting_dialog_body=0x7f04005f;
        /**  Dialog messages 
         */
        public static final int sign_in_waiting_dialog_title=0x7f04005e;
        /**  The welcome text 
         */
        public static final int sign_in_welcome=0x7f040057;
        public static final int slide_show_activity_label=0x7f040061;
        public static final int slide_show_instructions=0x7f040062;
        public static final int splash_activity_label=0x7f040063;
        public static final int splash_text=0x7f040064;
        public static final int unfriendly_error_prefix=0x7f040014;
    }
}
