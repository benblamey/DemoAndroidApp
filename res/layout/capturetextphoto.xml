<?xml version="1.0" encoding="utf-8"?>

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent">

	<Button
		android:layout_width="fill_parent"
		android:layout_height="wrap_content"
		android:layout_alignParentBottom="true"
		android:text="@string/capture_text_photo_button_capture_text"
		android:id="@+id/capture_text_photo_button_capture"/>
		
	<RelativeLayout 
		android:id="@+id/capture_text_photo_imageview_frame"
		android:layout_above="@+id/capture_text_photo_button_capture"
		android:layout_width="100dp"
		android:layout_marginLeft="4dip"
		android:layout_marginRight="1dip" 
		android:layout_marginTop="2dip"
		android:layout_marginBottom="5dip"
		android:layout_height="fill_parent">
		
		<ImageView
			android:id="@+id/capture_text_photo_imageview_photo"
			android:layout_height="fill_parent"
			android:layout_width="fill_parent" 
			android:scaleType="centerCrop"/>
			
		<Button
			android:layout_width="fill_parent"
			android:layout_height="wrap_content"
			android:layout_centerInParent="true"
			android:id="@+id/capture_text_photo_button_toggle_photo"/>
						
    </RelativeLayout>
		
<!-- An EditText control that forces the 'Done' action - there is a problem with 
	  multiline EditText controls (i.e. those for which text wrapping is enabled) 
	  that the 'return' action is always available. We use a custom control to 
	  work around this problem. -->
	<com.ml4d.core.EditText2
		android:gravity="top"
    	android:inputType="text|textLongMessage|textMultiLine"
    	android:layout_above="@+id/capture_text_photo_button_capture"
    	android:layout_toRightOf="@+id/capture_text_photo_imageview_frame"
    	android:scrollHorizontally="false"
    	android:layout_width="fill_parent"
		android:layout_height="fill_parent"
    	android:id="@+id/capture_text_photo_edittext_body"
    	android:hint="@string/capture_text_photo_body_hint"
    	android:freezesText="true"/>

</RelativeLayout>
